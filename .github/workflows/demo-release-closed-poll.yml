name: Testops - TestRail Milestone CLOSED - polling 

on:
  pull_request:
  push:
    branches: [ rpapa-release-close]
  workflow_dispatch:
    inputs:
      branchName:
        description: "rpapa branch"
        required: true
        default: "rpapa-release-close"

env:
  CLOUD_SQL_DATABASE_NAME: preflight
  CLOUD_SQL_DATABASE_USERNAME: ${{ secrets.CLOUD_SQL_DATABASE_USERNAME }}
  CLOUD_SQL_DATABASE_PASSWORD: ${{ secrets.CLOUD_SQL_DATABASE_PASSWORD }}
  CLOUD_SQL_DATABASE_PORT: ${{ secrets.CLOUD_SQL_DATABASE_PORT }}
  TESTRAIL_HOST: ${{ secrets.TESTRAIL_HOST }}
  TESTRAIL_USERNAME: ${{ secrets.TESTRAIL_USERNAME }}
  TESTRAIL_PASSWORD: ${{ secrets.TESTRAIL_PASSWORD }}
  ATLASSIAN_API_TOKEN: ${{ secrets.ATLASSIAN_API_TOKEN }}
  ATLASSIAN_HOST: ${{ secrets.ATLASSIAN_HOST }}
  ATLASSIAN_USERNAME: ${{ secrets.ATLASSIAN_USERNAME }}
  JIRA_HOST: ${{ secrets.JIRA_HOST }}
  JIRA_USER: ${{ secrets.JIRA_USER }}
  JIRA_PASSWORD: ${{ secrets.JIRA_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BUGZILLA_API_KEY: ${{ secrets.BUGZILLA_API_KEY }}
  BITRISE_HOST: ${{ secrets.BITRISE_HOST }}
  BITRISE_APP_SLUG: ${{ secrets.BITRISE_APP_SLUG }}
  BITRISE_TOKEN: ${{ secrets.BITRISE_TOKEN }}
  SENTRY_HOST: ${{ secrets.SENTRY_HOST }}
  SENTRY_API_TOKEN: ${{ secrets.SENTRY_API_TOKEN_CSO }}
  SENTRY_ORGANIZATION_SLUG: ${{ secrets.SENTRY_ORGANIZATION_SLUG }}
  SENTRY_IOS_PROJECT_ID: ${{ secrets.SENTRY_IOS_PROJECT_ID }}
  SENTRY_FENIX_PROJECT_ID: ${{ secrets.SENTRY_FENIX_PROJECT_ID }}
  SENTRY_FENIX_BETA_PROJECT_ID: ${{ secrets.SENTRY_FENIX_BETA_PROJECT_ID }}

jobs:
  reports:
    name: Run reports (${{ matrix.name }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        include:
          - name: Mobile Testrail Milestones CLOSED
            args: --platform mobile --project ALL --report-type testrail-milestones-closed

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: requirements.txt
      - uses: mattes/gce-cloudsql-proxy-action@v1
        with:
          creds: ${{ secrets.GCLOUD_AUTH }}
          instance: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
          port: ${{ secrets.CLOUD_SQL_DATABASE_PORT }}
      - run: pip install -r requirements.txt
      - run: python ./__main__.py ${{ matrix.args }}

  notify:
    name: Slack notify
    runs-on: ubuntu-latest
    needs: [reports, sentry]
    if: always()
    steps:
      - uses: actions/checkout@v5
      - run: echo "JOB_LOG_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
      - uses: slackapi/slack-github-action@v2.1.1
        env:
          WORKFLOW_NAME: ${{ github.workflow }}
          BRANCH: ${{ github.head_ref || github.ref_name }}
          JOB_STATUS: ${{ (needs.reports.result == 'success' && needs.sentry.result == 'success') && ':white_check_mark:' || ':x:' }}
          JOB_STATUS_COLOR: ${{ (needs.reports.result == 'success' && needs.sentry.result == 'success') && '#36a64f' || '#FF0000' }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_MOBILE_ALERTS_TOOLING }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL_MOBILE_ALERTS_TOOLING }}
          webhook-type: webhook-trigger
          payload-file-path: "./config/payload-slack-content.json"
          payload-templated: true
